service cloud.firestore {
  match /databases/{database}/documents {
  
    /// FUNCTIONS START ///

    //Checks if user is signed in
    function isSignedIn() {
      return request.auth.uid != null;
    }

    //Checks if user has admin rights
    function isAdmin() {
      return exists(/databases/$(database)/documents/admins/$(request.auth.uid))
    }

    //Checks if user has a specific grant
    function hasGrant(grant) {
      return  get(/databases/$(database)/documents/user_grants/$(request.auth.uid)).data[grant]==true
    }

    //Checks if user is granted either as admin or with a grant
    function isGranted(grant){
      return isAdmin() || hasGrant(grant);
    }


    //Checks if user has specific UID
    function isOwner(uid){
      return request.auth.uid == uid 
    }

    /// FUNCTIONS END ///


    /// RULES START ///


    match /tasks {
      allow read, write: if isSignedIn();
      match /{document=**}{
        allow read, write: if isSignedIn();

      }
    }

    match /credit_cards/{credit_card} {
    	allow create: if isAdmin() || request.auth.uid == request.resource.data.uid;
      allow read, update, delete: if isAdmin() || isOwner(resource.data.uid);
      
      match /account_statements/{account_statement} {
      	allow read, write: if isAdmin() || isOwner(get(/databases/$(database)/documents/credit_cards/$(credit_card)).data.uid);
        
        match /transactions/{transaction} {
        	allow read, write: if isAdmin() || isOwner(get(/databases/$(database)/documents/credit_cards/$(credit_card)).data.uid);
        }
      }
    }
    
    match /categories/{category} {
      allow read: if isAdmin() || (isSignedIn() && (resource.data.public == true || isOwner(resource.data.uid)));
      allow write: if isAdmin() || (isSignedIn() && isOwner(resource.data.uid));
    }

  match /transaction_descriptions/{td} {
      allow read: if isSignedIn();
      allow write: if isAdmin() || (isSignedIn() && isOwner(resource.data.uid))
  }

    match /admins {
      allow read: if isAdmin();
      match /{document=**}{
        allow read, write: if isAdmin() && isOwner(resource.id);
      }
    }

    /// RULES END ///
  }
}